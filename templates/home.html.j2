{% extends "base.html.j2" %}

{% block content %}
<div class="max-w-lg mx-auto mb-6">
    <h2 class="text-2xl font-semibold mb-6 text-white">Welcome to EduGrok, Dino Cowboy!</h2>
</div>

<!-- Create Post Form -->
<div class="bg-black p-5 rounded-xl shadow-lg border border-orange-300 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
    <h3 class="text-lg font-semibold text-orange-100 mb-4">Create a Post</h3>
    <form action="/create_post" method="POST" enctype="multipart/form-data">
        <textarea name="content" placeholder="What's on your mind? Share your thoughts or questions!" class="w-full p-3 border border-gray-600 rounded-lg mb-3 focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white placeholder-gray-400" required rows="3"></textarea>
        <div class="flex flex-col mb-3">
            <label for="media" class="text-gray-300 mb-2">Upload Image or Video (optional):</label>
            <input type="file" name="media" id="media" accept="image/*,video/mp4" class="text-gray-300">
        </div>
        <div class="flex flex-col mb-3">
            <label for="subject" class="text-gray-300 mb-2">Subject:</label>
            <select name="subject" id="subject" class="w-full p-3 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white">
                <option value="Math">Math</option>
                <option value="Language">Language</option>
                <option value="Science">Science</option>
                <option value="General">General</option>
            </select>
        </div>
        <button type="submit" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition w-full">Post</button>
    </form>
</div>

<!-- Lessons Section -->
<div class="lessons-section mb-8">
    <h2 class="text-xl font-semibold mb-4 text-gray-300">Today's Lessons</h2>
    {% for lesson in lessons %}
    <div class="lesson-card bg-black p-5 rounded-xl shadow-lg border border-blue-200 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 mb-6">
        <h3 class="text-lg font-semibold text-blue-100 mb-2">{{ lesson.title }}</h3>
        <p class="text-gray-400 mb-4">{{ lesson.description or 'No description available.' }}</p>
        {% if lesson.type == 'match' %}
            <p>Match numbers: Drag to pair (e.g., 2x3 to 6)</p>
            <!-- Placeholder for drag-and-drop; implement if needed -->
            <button class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition">Match 1</button>
        {% elif lesson.type == 'trace' %}
            <p>Trace the Word</p>
            <p>Type the word you see below to practice spelling:</p>
            <p class="trace-word" id="trace-word-{{ lesson.id }}">{{ lesson.content }}</p>
            <input type="text" id="trace-input-{{ lesson.id }}" class="input-field bg-gray-800 text-white border border-gray-600 rounded-lg p-2 w-full mb-2">
            <button onclick="checkLesson({{ lesson.id }}, 'trace')" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition">Check</button>
            <div id="trace-feedback-{{ lesson.id }}" class="feedback mt-2 font-bold"></div>
        {% elif lesson.type == 'spelling' %}
            <p>Spelling Practice</p>
            <p>Spell the word for the given sound: {{ lesson.content }}</p>
            <input type="text" id="spelling-input-{{ lesson.id }}" class="input-field bg-gray-800 text-white border border-gray-600 rounded-lg p-2 w-full mb-2">
            <button onclick="checkLesson({{ lesson.id }}, 'spelling')" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition">Check</button>
            <div id="spelling-feedback-{{ lesson.id }}" class="feedback mt-2 font-bold"></div>
        {% elif lesson.type == 'multiple_choice' %}
            <p>Multiple Choice Question</p>
            <p>{{ lesson.content.question }}</p>
            {% for option in lesson.content.options %}
                <label class="block"><input type="radio" name="mc-{{ lesson.id }}" value="{{ option }}"> {{ option }}</label>
            {% endfor %}
            <button onclick="checkLesson({{ lesson.id }}, 'multiple_choice')" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition mt-2">Check</button>
            <div id="multiple_choice-feedback-{{ lesson.id }}" class="feedback mt-2 font-bold"></div>
        {% elif lesson.type == 'sentence' %}
            <p>Sentence Completion</p>
            <p>Complete the sentence: {{ lesson.content }}</p>
            <input type="text" id="sentence-input-{{ lesson.id }}" class="input-field bg-gray-800 text-white border border-gray-600 rounded-lg p-2 w-full mb-2">
            <button onclick="checkLesson({{ lesson.id }}, 'sentence')" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-700 transition">Check</button>
            <div id="sentence-feedback-{{ lesson.id }}" class="feedback mt-2 font-bold"></div>
        {% else %}
            <p class="text-white">Content: {{ lesson.content }}</p>
        {% endif %}
        <button onclick="completeLesson({{ lesson.id }})" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition mt-4">Complete Lesson</button>
        <button onclick="doAgain({{ lesson.id }})" class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-700 transition mt-4 ml-2">Do Again</button>
    </div>
    {% endfor %}
</div>

<!-- Posts Section -->
<div class="posts-section">
    <h2 class="text-xl font-semibold mb-4 text-gray-300">Community Feed</h2>
    {% for post in posts %}
    <div id="post-{{ post.id }}" class="post-card bg-black p-5 rounded-xl shadow-lg border border-orange-300 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
        <div class="flex items-center mb-3">
            <div class="w-10 h-10 rounded-full bg-blue-500 text-white flex items-center justify-center mr-3 font-bold text-sm">
                {{ post.handle[0] | upper if post.handle else 'U' }}
            </div>
            <div>
                <h3 class="text-sm font-semibold text-blue-100">{{ post.handle }} (Grade {{ post.grade }})</h3>
                <p class="text-xs text-gray-400">{{ post.created_at }}</p>
            </div>
        </div>
        {% if post.original_handle %}
            <div class="text-gray-400 text-xs mb-2 flex items-center">
                <span class="text-lg mr-1">üîÑ</span>
                <span>Reposted from {{ post.original_handle }}</span>
            </div>
        {% endif %}
        <p class="text-white leading-relaxed mb-3 text-base">{{ post.content | safe }}</p>
        {% if post.media_url %}
            {% if post.media_url.endswith(('.png', '.jpg', '.jpeg')) %}
                <img src="{{ post.media_url }}" alt="Post media" style="max-width: 100%; height: auto; border-radius: 8px; margin-bottom: 1rem;">
            {% elif post.media_url.endswith('.mp4') %}
                <video controls style="max-width: 100%; border-radius: 8px; margin-bottom: 1rem;">
                    <source src="{{ post.media_url }}" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
            {% endif %}
        {% endif %}
        <!-- View Count -->
        <div class="flex items-center text-gray-400 text-xs mb-3">
            <span class="mr-1">üëÅÔ∏è</span>
            <span>{{ post.views or 0 }} views</span>
        </div>
        <div class="flex flex-wrap gap-2 mb-3">
            <span class="bg-blue-900 text-blue-100 text-sm px-3 py-1 rounded-full font-medium">Subject: {{ post.subject }}</span>
            <span class="bg-gray-700 text-gray-200 text-sm px-3 py-1 rounded-full font-medium">Likes: {{ post.likes or 0 }}</span>
            <span class="bg-gray-700 text-gray-200 text-sm px-3 py-1 rounded-full font-medium">Reposts: {{ post.reposts or 0 }}</span>
        </div>
        <!-- Social Interactions Bar -->
        <div class="flex justify-between items-center pt-3 border-t border-gray-700">
            <div class="flex space-x-6">
                <!-- Like Button with Icon -->
                <button onclick="likePost({{ post.id }})" class="text-gray-400 hover:text-red-400 transition flex items-center space-x-1" {% if post.liked_by_user %}style="color: #ef4444;"{% endif %}>
                    <span class="text-lg">‚ù§Ô∏è</span>
                    <span class="text-sm">{{ 'Unlike' if post.liked_by_user else 'Like' }}</span>
                </button>
                <!-- Repost Button -->
                <button onclick="repostPost({{ post.id }})" class="text-gray-400 hover:text-green-400 transition flex items-center space-x-1" {% if post.reposted_by_user %}style="color: #22c55e;"{% endif %}>
                    <span class="text-lg">üîÑ</span>
                    <span class="text-sm">{{ 'Unrepost' if post.reposted_by_user else 'Repost' }}</span>
                </button>
                <!-- Comment Button -->
                <button onclick="toggleComments({{ post.id }})" class="text-gray-400 hover:text-blue-400 transition flex items-center space-x-1">
                    <span class="text-lg">üí¨</span>
                    <span class="text-sm">Comment</span>
                </button>
            </div>
            <!-- Share Button -->
            <button onclick="sharePost({{ post.id }})" class="text-gray-400 hover:text-indigo-400 transition flex items-center space-x-1">
                <span class="text-lg">üì§</span>
                <span class="text-sm">Share</span>
            </button>
        </div>
        {% if post.id in comments %}
        {% set sorted_comments = comments[post.id] | sort(attribute='created_at', reverse=True) %}
        {% set visible_comments = sorted_comments[:5] %}
        {% set hidden_comments = sorted_comments[5:] %}
        <div class="comments-section mt-4 p-3 bg-gray-900 rounded-lg">
            <h4 class="text-sm font-semibold text-blue-100 mb-2">Comments:</h4>
            {% for comment in visible_comments %}
            <div class="comment mb-2 text-sm text-gray-300">
                <strong class="text-blue-100">{{ comment.handle }}</strong> - <small class="text-gray-500">{{ comment.created_at }}</small><br>
                {{ comment.content | safe }}
            </div>
            {% endfor %}
            {% if hidden_comments %}
            <div id="hidden-comments-{{ post.id }}" style="display: none;">
                {% for comment in hidden_comments %}
                <div class="comment mb-2 text-sm text-gray-300">
                    <strong class="text-blue-100">{{ comment.handle }}</strong> - <small class="text-gray-500">{{ comment.created_at }}</small><br>
                    {{ comment.content | safe }}
                </div>
                {% endfor %}
            </div>
            <button id="toggle-btn-{{ post.id }}" onclick="toggleCommentsExtra({{ post.id }})" class="text-blue-400 hover:text-blue-300 text-sm mt-2 underline">Show more ({{ hidden_comments | length }} more)</button>
            {% endif %}
        </div>
        {% endif %}
        <div id="comment-form-{{ post.id }}" style="display: none;" class="mt-3">
            <form method="POST" action="/comment/{{ post.id }}">
                <textarea name="content" placeholder="Write a comment..." class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-800 text-white placeholder-gray-400" required rows="2"></textarea>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">Post Comment</button>
            </form>
        </div>
    </div>
{% endfor %}

<script>
// Post-specific JS (likes, reposts, comments toggle)
function likePost(postId) {
    fetch(`/like/${postId}`, {method: 'POST'})
    .then(r => r.json())
    .then(d => {
        if (d.success) {
            location.reload();
        } else {
            alert(d.error);
        }
    });
}

function repostPost(postId) {
    fetch(`/repost/${postId}`, {method: 'POST'})
    .then(r => r.json())
    .then(d => {
        if (d.success) {
            location.reload();
        } else {
            alert(d.error);
        }
    });
}

function toggleComments(postId) {
    const form = document.getElementById(`comment-form-${postId}`);
    form.style.display = form.style.display === 'none' ? 'block' : 'none';
}

function toggleCommentsExtra(postId) {
    const hiddenDiv = document.getElementById(`hidden-comments-${postId}`);
    const btn = document.getElementById(`toggle-btn-${postId}`);
    if (hiddenDiv.style.display === 'none') {
        hiddenDiv.style.display = 'block';
        btn.textContent = 'Show less';
    } else {
        hiddenDiv.style.display = 'none';
        btn.textContent = `Show more (${hiddenDiv.children.length} more)`;
    }
}

function sharePost(postId) {
    const url = `${window.location.origin}/home#post-${postId}`;
    navigator.clipboard.writeText(url).then(() => {
        const btn = event.target;
        const originalHTML = btn.innerHTML;
        btn.innerHTML = '<span class="text-lg">üìã</span><span class="text-sm">Copied!</span>';
        btn.style.color = '#a78bfa';
        setTimeout(() => {
            btn.innerHTML = originalHTML;
            btn.style.color = '';
        }, 2000);
    }).catch(() => {
        alert('Failed to copy link. Please copy manually: ' + url);
    });
}

// Lesson check function
function checkLesson(lessonId, type) {
    let userInput;
    if (type === 'multiple_choice') {
        const selected = document.querySelector(`input[name="mc-${lessonId}"]:checked`);
        if (!selected) {
            alert('Please select an option');
            return;
        }
        userInput = selected.value;
    } else {
        userInput = document.getElementById(`${type}-input-${lessonId}`).value;
        if (!userInput.trim()) {
            alert('Please enter your answer');
            return;
        }
    }
    fetch('/check_lesson', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ lesson_id: lessonId, user_input: userInput })
    })
    .then(response => response.json())
    .then(data => {
        const feedback = document.getElementById(`${type}-feedback-${lessonId}`);
        feedback.innerText = data.message;
        feedback.style.color = data.success ? 'green' : 'red';
    })
    .catch(error => console.error('Error:', error));
}

function completeLesson(lessonId) {
    window.location.href = `/complete_lesson/${lessonId}`;
}

function doAgain(lessonId) {
    window.location.href = `/reset_lesson/${lessonId}`;
}
</script>
{% endblock %}