<!-- home.html.j2 -->
{% extends "base.html.j2" %}

{% block title %}EduGrok Home{% endblock %}

{% block content %}
<div class="container mx-auto p-6 max-w-4xl">
    <!-- Flash messages -->
    {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
            <div class="mb-6 space-y-2">
                {% for category, message in messages %}
                    <div class="p-4 rounded-lg {% if category == 'success' %}bg-green-900 text-green-100{% elif category == 'error' %}bg-red-900 text-red-100{% else %}bg-blue-900 text-blue-100{% endif %}">
                        {{ message }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% endwith %}

    <!-- Sort Dropdown -->
    <div class="mb-6 flex justify-end">
        <label for="sort" class="mr-2 text-gray-300 font-medium">Sort by:</label>
        <select id="sort" class="p-2 bg-gray-800 text-white border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" onchange="window.location.href = '?sort=' + this.value">
            <option value="latest" {% if sort_option == 'latest' %}selected{% endif %}>Latest</option>
            <option value="most_views" {% if sort_option == 'most_views' %}selected{% endif %}>Most Views</option>
        </select>
    </div>

    <!-- Create Post Button -->
    <div class="mb-6 text-center">
        <button id="open-post-form" class="bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition-colors font-semibold flex items-center justify-center mx-auto">
            <span class="text-xl mr-2">+</span> Create Post
        </button>
    </div>

    <!-- Feed -->
    {% if combined %}
        <div class="space-y-6">
            {% for item in combined %}
                {% if item.type == 'post' %}
                    {% set post = item %}
                    {% include 'post_card.html.j2' %}
                {% else %}
                    {% set lesson = item %}
                    {% include 'lesson_card.html.j2' %}
                {% endif %}
            {% endfor %}
        </div>
    {% else %}
        <div class="text-center py-8 bg-black p-5 rounded-xl shadow-lg border border-blue-200 max-w-lg mx-auto">
            <h2 class="text-2xl font-bold mb-4 text-white">No Posts Yet</h2>
            <p class="text-gray-300 mb-6">Create a post or add lessons to get started!</p>
        </div>
    {% endif %}

    <!-- Include Post Form Modal -->
    {% include 'post_form.html.j2' %}

    <script>
        // Modal JS
        const openBtn = document.getElementById('open-post-form');
        const modal = document.getElementById('post-form');
        const backdrop = document.getElementById('post-form-backdrop');
        const cancelBtn = document.getElementById('cancel-post');

        function openModal() {
            modal.classList.remove('hidden');
            backdrop.classList.remove('hidden');
            modal.classList.remove('scale-95');
        }

        function closeModal() {
            modal.classList.add('hidden');
            backdrop.classList.add('hidden');
            modal.classList.add('scale-95');
        }

        openBtn.addEventListener('click', openModal);
        cancelBtn.addEventListener('click', closeModal);
        backdrop.addEventListener('click', closeModal);

        // Media Preview
        const fileInput = document.getElementById('media-upload');
        const preview = document.getElementById('media-preview');

        fileInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            preview.innerHTML = '';
            if (file) {
                const type = file.type;
                if (type.startsWith('image/')) {
                    const img = document.createElement('img');
                    img.src = URL.createObjectURL(file);
                    img.className = 'max-w-full h-auto rounded-lg';
                    preview.appendChild(img);
                } else if (type === 'video/mp4') {
                    const video = document.createElement('video');
                    video.src = URL.createObjectURL(file);
                    video.controls = true;
                    video.className = 'max-w-full h-auto rounded-lg';
                    preview.appendChild(video);
                }
            }
        });

        // Char count
        const textarea = document.getElementById('post-content');
        const charCount = document.getElementById('char-count');
        textarea.addEventListener('input', () => {
            charCount.textContent = `${textarea.value.length}/280`;
        });

        // Post-specific JS (likes, reposts, comments toggle)
        function likePost(postId) {
            fetch(`/like/${postId}`, {method: 'POST'})
            .then(r => r.json())
            .then(d => {
                if (d.success) {
                    location.reload();
                } else {
                    alert(d.error);
                }
            });
        }

        function repostPost(postId) {
            fetch(`/repost/${postId}`, {method: 'POST'})
            .then(r => r.json())
            .then(d => {
                if (d.success) {
                    location.reload();
                } else {
                    alert(d.error);
                }
            });
        }

        function toggleComments(postId) {
            const form = document.getElementById(`comment-form-${postId}`);
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }

        function toggleCommentsExtra(postId) {
            const hiddenDiv = document.getElementById(`hidden-comments-${postId}`);
            const btn = document.getElementById(`toggle-btn-${postId}`);
            if (hiddenDiv.style.display === 'none') {
                hiddenDiv.style.display = 'block';
                btn.textContent = 'Show less';
            } else {
                hiddenDiv.style.display = 'none';
                btn.textContent = `Show more (${hiddenDiv.children.length} more)`;
            }
        }

        function sharePost(postId) {
            const url = `${window.location.origin}/home#post-${postId}`;
            navigator.clipboard.writeText(url).then(() => {
                const btn = event.target;
                const originalHTML = btn.innerHTML;
                btn.innerHTML = '<span class="text-lg">ðŸ“‹</span><span class="text-sm">Copied!</span>';
                btn.style.color = '#a78bfa';
                setTimeout(() => {
                    btn.innerHTML = originalHTML;
                    btn.style.color = '';
                }, 2000);
            }).catch(() => {
                alert('Failed to copy link. Please copy manually: ' + url);
            });
        }

        // Lesson check functions
        function checkMath(lessonId) {
            const inputValue = document.getElementById('math-input-' + lessonId).value.trim();
            if (!inputValue) { alert('Please enter an answer.'); return; }
            const answer = parseFloat(inputValue) || 0;
            fetch('/check_lesson', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    lesson_id: lessonId,
                    activity_type: 'math_fill',
                    response: answer
                })
            }).then(res => res.json()).then(data => {
                if (data.is_correct) {
                    alert('Correct! +' + data.points + ' points');
                } else {
                    alert(data.message || 'Try again!');
                }
            }).catch(err => console.error('Error:', err));
        }

        function submitMatch(lessonId) {
            fetch('/check_lesson', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    lesson_id: lessonId,
                    activity_type: 'match_game',
                    response: 'demo_match'
                })
            }).then(res => res.json()).then(data => {
                if (data.is_correct) {
                    alert('Great match! +' + data.points + ' points');
                } else {
                    alert(data.message || 'Keep trying!');
                }
            }).catch(err => console.error('Error:', err));
        }

        function checkTrace(lessonId) {
            const input = document.getElementById('trace-input-' + lessonId).value.trim().toLowerCase();
            if (!input) { alert('Please enter the word.'); return; }
            fetch('/check_lesson', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    lesson_id: lessonId,
                    activity_type: 'trace_complete',
                    response: input
                })
            }).then(res => res.json()).then(data => {
                if (data.is_correct) {
                    alert('Correct! Great job tracing the word. +' + data.points + ' points');
                } else {
                    alert(data.message || 'Try again! Make sure to type the word exactly as shown.');
                }
            }).catch(err => console.error('Error:', err));
        }

        function checkSpelling(lessonId) {
            const input = document.getElementById('spell-input-' + lessonId).value.trim().toLowerCase();
            if (!input) { alert('Please enter your spelling.'); return; }
            fetch('/check_lesson', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    lesson_id: lessonId,
                    activity_type: 'spelling_complete',
                    response: input
                })
            }).then(res => res.json()).then(data => {
                if (data.is_correct) {
                    alert('Correct! You spelled the word correctly. +' + data.points + ' points');
                } else {
                    alert(data.message || 'Try again! Check the spelling carefully.');
                }
            }).catch(err => console.error('Error:', err));
        }

        function checkMultipleChoice(lessonId) {
            const selected = document.querySelector('input[name="mc-' + lessonId + '"]:checked');
            if (!selected) {
                alert('Please select an option.');
                return;
            }
            const answer = selected.value.trim().toLowerCase();
            fetch('/check_lesson', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    lesson_id: lessonId,
                    activity_type: 'mc_choice',
                    response: answer
                })
            }).then(res => res.json()).then(data => {
                if (data.is_correct) {
                    alert('Correct! +' + data.points + ' points');
                } else {
                    alert(data.message || 'Try again!');
                }
            }).catch(err => console.error('Error:', err));
        }

        function checkSentence(lessonId) {
            const select = document.getElementById('sentence-select-' + lessonId);
            if (!select.value) {
                alert('Please select an option.');
                return;
            }
            const answer = select.value.trim().toLowerCase();
            fetch('/check_lesson', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    lesson_id: lessonId,
                    activity_type: 'sentence_complete',
                    response: answer
                })
            }).then(res => res.json()).then(data => {
                if (data.is_correct) {
                    alert('Correct! +' + data.points + ' points');
                } else {
                    alert(data.message || 'Try again!');
                }
            }).catch(err => console.error('Error:', err));
        }

        function completeLesson(lessonId) {
            window.location.href = `/complete_lesson/${lessonId}`;
        }

        function doAgain(lessonId) {
            window.location.href = `/reset_lesson/${lessonId}`;
        }
    </script>
</div>
{% endblock %}