{% extends "base.html.j2" %}

{% block content %}

<div id="post-form-backdrop" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div id="post-form" class="hidden bg-black p-6 rounded-xl shadow-xl border border-blue-200 max-w-lg w-full mx-4 transform scale-95 transition-all duration-300 text-white">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-blue-100">Create a Post</h2>
            <button id="close-post-form" class="text-gray-400 hover:text-gray-200 text-2xl font-bold">&times;</button>
        </div>
        <form action="{{ url_for('create_post') }}" method="POST" enctype="multipart/form-data">
            <textarea name="content" class="w-full p-3 border border-gray-600 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-800 text-white placeholder-gray-400" placeholder="Share something..." required rows="4"></textarea>
            <select name="subject" class="w-full p-3 border border-gray-600 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-800 text-white">
                <option value="math">Math</option>
                <option value="science">Science</option>
                <option value="language">Language</option>
                <option value="General">General</option>
            </select>
            <input type="file" name="media" accept="image/*,video/mp4" class="w-full p-3 border border-gray-600 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-800 text-white placeholder-gray-400">
            <div class="flex justify-end space-x-3">
                <button type="button" id="cancel-post" class="px-4 py-2 text-gray-400 border border-gray-600 rounded-md hover:bg-gray-700 transition">Cancel</button>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">Post</button>
            </div>
        </form>
    </div>
</div>

<button id="open-post-form" class="fixed bottom-6 right-6 bg-blue-500 hover:bg-blue-600 text-white w-14 h-14 rounded-full flex items-center justify-center shadow-lg hover:shadow-xl transition-all duration-200 z-40 text-2xl font-bold">
    +
</button>

{% if posts %}
    {% for post in posts %}
        <div class="bg-black p-5 rounded-xl shadow-lg border border-blue-200 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
            <div class="flex items-center mb-3">
                <div class="w-10 h-10 rounded-full bg-blue-500 text-white flex items-center justify-center mr-3 font-bold text-sm">
                    {{ post.handle[0] | upper if post.handle else 'U' }}
                </div>
                <div>
                    <h3 class="text-sm font-semibold text-blue-100">{{ post.handle }} (Grade {{ post.grade }})</h3>
                    <p class="text-xs text-gray-400">{{ post.created_at }}</p>
                </div>
            </div>
            <p class="text-white leading-relaxed mb-3 text-base">{{ post.content | safe }}</p>
            {% if post.media_url %}
                {% if post.media_url.endswith(('.png', '.jpg', '.jpeg')) %}
                    <img src="{{ post.media_url }}" alt="Post media" style="max-width: 100%; height: auto; border-radius: 8px; margin-bottom: 1rem;">
                {% elif post.media_url.endswith('.mp4') %}
                    <video controls style="max-width: 100%; border-radius: 8px; margin-bottom: 1rem;">
                        <source src="{{ post.media_url }}" type="video/mp4">
                        Your browser does not support the video tag.
                    </video>
                {% endif %}
            {% endif %}
            <!-- View Count -->
            <div class="flex items-center text-gray-400 text-xs mb-3">
                <span class="mr-1">üëÅÔ∏è</span>
                <span>{{ post.views or 0 }} views</span>
            </div>
            <div class="flex flex-wrap gap-2 mb-3">
                <span class="bg-blue-900 text-blue-100 text-sm px-3 py-1 rounded-full font-medium">Subject: {{ post.subject }}</span>
                <span class="bg-gray-700 text-gray-200 text-sm px-3 py-1 rounded-full font-medium">Likes: {{ post.likes }}</span>
                <span class="bg-gray-700 text-gray-200 text-sm px-3 py-1 rounded-full font-medium">Reposts: {{ post.reposts or 0 }}</span>
            </div>
            <!-- Social Interactions Bar -->
            <div class="flex justify-between items-center pt-3 border-t border-gray-700">
                <div class="flex space-x-6">
                    <!-- Like Button with Icon -->
                    <button onclick="likePost({{ post.id }})" class="text-gray-400 hover:text-red-400 transition flex items-center space-x-1" {% if post.liked_by_user %}style="color: #ef4444;"{% endif %}>
                        <span class="text-lg">‚ù§Ô∏è</span>
                        <span class="text-sm">{{ 'Unlike' if post.liked_by_user else 'Like' }}</span>
                    </button>
                    <!-- Repost Button -->
                    <button onclick="repostPost({{ post.id }})" class="text-gray-400 hover:text-green-400 transition flex items-center space-x-1">
                        <span class="text-lg">üîÑ</span>
                        <span class="text-sm">Repost</span>
                    </button>
                    <!-- Comment Button -->
                    <button onclick="toggleComments({{ post.id }})" class="text-gray-400 hover:text-blue-400 transition flex items-center space-x-1">
                        <span class="text-lg">üí¨</span>
                        <span class="text-sm">Comment</span>
                    </button>
                </div>
                <!-- Share Button -->
                <button class="text-gray-400 hover:text-indigo-400 transition flex items-center space-x-1">
                    <span class="text-lg">üì§</span>
                    <span class="text-sm">Share</span>
                </button>
            </div>
            {% if post.id in comments %}
            <div class="comments-section mt-4 p-3 bg-gray-900 rounded-lg">
                <h4 class="text-sm font-semibold text-blue-100 mb-2">Comments:</h4>
                {% for comment in comments[post.id] %}
                <div class="comment mb-2 text-sm text-gray-300">
                    <strong class="text-blue-100">{{ comment.handle }}</strong> - <small class="text-gray-500">{{ comment.created_at }}</small><br>
                    {{ comment.content | safe }}
                </div>
                {% endfor %}
            </div>
            {% endif %}
            <div id="comment-form-{{ post.id }}" style="display: none;" class="mt-3">
                <form method="POST" action="/comment/{{ post.id }}">
                    <textarea name="content" placeholder="Write a comment..." class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-800 text-white placeholder-gray-400" required rows="2"></textarea>
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">Post Comment</button>
                </form>
            </div>
        </div>
    {% endfor %}
{% else %}
    <div class="text-center py-8">
        <p class="text-gray-600 text-lg">No posts available yet. Be the first to share!</p>
    </div>
{% endif %}

{% if lesson %}
    <div class="bg-black p-5 rounded-xl shadow-lg border border-orange-300 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
        <h3 class="text-lg font-semibold text-orange-100 mb-3">{{ lesson.subject }}</h3>
        <div class="text-white leading-relaxed mb-4 prose prose-sm max-w-none">{{ lesson.content | safe }}</div>
        {% if lesson.subject == 'math' %}
            <!-- Math Fill-in -->
            <div class="mb-4" id="math-activity-{{ lesson.id }}">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Math Fill-in</h4>
                <input type="number" id="math-input-{{ lesson.id }}" class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white placeholder-gray-400" placeholder="Enter your answer">
                <button onclick="checkMath()" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
                <script>
                    function checkMath() {
                        const answer = document.getElementById('math-input-{{ lesson.id }}').value;
                        if (!answer) { alert('Please enter an answer.'); return; }
                        fetch('/check_lesson', {
                            method: 'POST',
                            headers: {'Content-Type': 'application/json'},
                            body: JSON.stringify({
                                lesson_id: {{ lesson.id }},
                                activity_type: 'math_fill',
                                response: answer,
                                complete_lesson: true
                            })
                        }).then(res => res.json()).then(data => {
                            if (data.is_correct) {
                                alert('Correct! +' + data.points + ' points');
                            } else {
                                alert('Try again!');
                            }
                        }).catch(err => console.error('Error:', err));
                    }
                </script>
            </div>
            <!-- Match-3 Stub -->
            <div class="mb-4" id="match-game-{{ lesson.id }}">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Match Three</h4>
                <p class="text-gray-300 mb-2">Match numbers: Drag to pair (e.g., 2x3 to 6)</p>
                <!-- Simple buttons for demo -->
                <button onclick="submitMatch({{ lesson.id }})" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition mr-2">Match 1</button>
                <button onclick="submitMatch({{ lesson.id }})" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition mr-2">Match 2</button>
                <button onclick="submitMatch({{ lesson.id }})" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Match 3</button>
                <script>
                    function submitMatch(lessonId) {
                        // Stub: assume selections [1,2,3] for full match
                        const selections = [1, 2, 3];
                        fetch('/check_lesson', {
                            method: 'POST',
                            headers: {'Content-Type': 'application/json'},
                            body: JSON.stringify({
                                lesson_id: lessonId,
                                activity_type: 'match_three',
                                response: JSON.stringify(selections),
                                complete_lesson: true
                            })
                        }).then(res => res.json()).then(data => {
                            alert(data.is_correct ? 'Great match! +' + data.points + ' points' : 'Keep trying!');
                        }).catch(err => console.error('Error:', err));
                    }
                </script>
            </div>
        {% elif lesson.subject == 'language' %}
            <!-- Path Lesson: Word Tracing -->
            <div class="mb-4">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Trace the Word</h4>
                <p class="text-gray-300 mb-2">Type the word you see below to practice spelling:</p>
                <p class="text-white font-bold mb-2">{{ lesson.trace_word or 'cat' }}</p>
                <input type="text" id="trace-input-{{ lesson.id }}" class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white placeholder-gray-400" placeholder="Type the word here">
                <button onclick="checkTrace({{ lesson.id }})" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
            </div>
            <!-- Spelling Lesson -->
            <div class="mb-4">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Spelling Practice</h4>
                <p class="text-gray-300 mb-2">Spell the word for the given sound: {{ lesson.sound or '/k√¶t/' }}</p>
                <input type="text" id="spell-input-{{ lesson.id }}" class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white placeholder-gray-400" placeholder="Type your answer here">
                <button onclick="checkSpelling({{ lesson.id }})" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
            </div>
            <!-- Multiple Choice Questions -->
            <div class="mb-4">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Multiple Choice</h4>
                <p class="text-gray-300 mb-2">{{ lesson.mc_question or 'What is the correct spelling?' }}</p>
                {% for option in lesson.mc_options or ['cat', 'kat', 'ct', 'caat'] %}
                    <label class="block mb-2 text-white">
                        <input type="radio" name="mc-{{ lesson.id }}" value="{{ option }}" class="mr-2">
                        {{ option }}
                    </label>
                {% endfor %}
                <button onclick="checkMultipleChoice({{ lesson.id }})" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
            </div>
            <!-- Sentence Completion -->
            <div class="mb-4">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Sentence Completion</h4>
                <p class="text-gray-300 mb-2">The cat sat on the ___.</p>
                <select id="sentence-select-{{ lesson.id }}" class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white">
                    <option value="mat">mat</option>
                    <option value="dog">dog</option>
                    <option value="moon">moon</option>
                </select>
                <button onclick="checkSentence({{ lesson.id }})" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
            </div>
        {% endif %}
        <div class="flex justify-end">
            <button onclick="completeLesson({{ lesson.id }})" class="bg-orange-500 text-white px-6 py-2 rounded-md hover:bg-orange-600 transition inline-flex items-center">
                Complete Lesson
            </button>
        </div>
    </div>
{% else %}
    <div class="text-center py-8">
        <p class="text-gray-600 text-lg">No lessons available. Try generating a new one!</p>
    </div>
{% endif %}

<!-- Game Card -->
<div class="bg-black p-5 rounded-xl shadow-lg border border-green-300 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
    <h3 class="text-lg font-semibold text-green-100 mb-3">Play a Game</h3>
    <p class="text-white leading-relaxed mb-4">Test your phonics skills with our interactive game!</p>
    <div class="flex justify-end">
        <a href="{{ url_for('phonics_game') }}" class="bg-green-500 text-white px-6 py-2 rounded-md hover:bg-green-600 transition inline-flex items-center">
            Start Game
        </a>
    </div>
</div>

<div class="mt-8 p-4 bg-black text-white rounded-xl shadow-sm max-w-lg mx-auto border border-gray-700">
    <h2 class="text-xl font-semibold mb-3 text-gray-300">Recent Test</h2>
    {% if test %}
        <p class="text-gray-300 text-lg">Grade {{ test.grade }} - Score: {{ test.score }}/10 - Date: {{ test.date }}</p>
    {% else %}
        <p class="text-gray-400">No tests taken yet. Take one to get started!</p>
    {% endif %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const openButton = document.getElementById('open-post-form');
    const closeButton = document.getElementById('close-post-form');
    const cancelButton = document.getElementById('cancel-post');
    const postForm = document.getElementById('post-form');
    const backdrop = document.getElementById('post-form-backdrop');

    if (!openButton || !postForm || !backdrop) {
        console.error('Required elements not found for post form toggle');
        return;
    }

    openButton.addEventListener('click', function() {
        postForm.classList.remove('hidden');
        backdrop.classList.remove('hidden');
        setTimeout(() => {
            postForm.classList.remove('scale-95');
            postForm.classList.add('scale-100');
        }, 10);
    });

    function closePostForm() {
        postForm.classList.add('scale-95');
        setTimeout(() => {
            postForm.classList.remove('scale-100');
            postForm.classList.add('hidden');
            backdrop.classList.add('hidden');
        }, 200);
    }

    closeButton.addEventListener('click', closePostForm);
    if (cancelButton) {
        cancelButton.addEventListener('click', closePostForm);
    }
    backdrop.addEventListener('click', function(e) {
        if (e.target === backdrop) {
            closePostForm();
        }
    });
});

function likePost(postId) {
    fetch(`/like/${postId}`, {method: 'POST'})
    .then(r => r.json())
    .then(d => {
        if (d.success) {
            location.reload();
        } else {
            alert(d.error);
        }
    });
}

function repostPost(postId) {
    fetch(`/repost/${postId}`, {method: 'POST'})
    .then(r => r.json())
    .then(d => {
        if (d.success) {
            location.reload();
        } else {
            alert(d.error);
        }
    });
}

function toggleComments(postId) {
    const form = document.getElementById(`comment-form-${postId}`);
    form.style.display = form.style.display === 'none' ? 'block' : 'none';
}

function checkTrace(lessonId) {
    const input = document.getElementById(`trace-input-${lessonId}`).value.trim();
    if (!input) { alert('Please enter the word.'); return; }
    fetch('/check_lesson', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            lesson_id: lessonId,
            activity_type: 'mc_choice',
            response: input
        })
    }).then(res => res.json()).then(data => {
        alert(data.is_correct ? 'Correct! Great job tracing the word. +' + data.points + ' points' : 'Try again! Make sure to type the word exactly as shown.');
    }).catch(err => console.error('Error:', err));
}

function checkSpelling(lessonId) {
    const input = document.getElementById(`spell-input-${lessonId}`).value.trim();
    if (!input) { alert('Please enter your spelling.'); return; }
    fetch('/check_lesson', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            lesson_id: lessonId,
            activity_type: 'spelling_complete',
            response: input
        })
    }).then(res => res.json()).then(data => {
        alert(data.is_correct ? 'Correct! You spelled the word correctly. +' + data.points + ' points' : 'Try again! Check the spelling carefully.');
    }).catch(err => console.error('Error:', err));
}

function checkMultipleChoice(lessonId) {
    const selected = document.querySelector(`input[name="mc-${lessonId}"]:checked`);
    if (!selected) {
        alert('Please select an option.');
        return;
    }
    const answer = selected.value.trim();
    fetch('/check_lesson', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            lesson_id: lessonId,
            activity_type: 'mc_choice',
            response: answer,
            complete_lesson: true
        })
    }).then(res => res.json()).then(data => {
        alert(data.is_correct ? 'Correct! You chose the right answer. +' + data.points + ' points' : 'Incorrect. Try again!');
    }).catch(err => console.error('Error:', err));
}

function checkSentence(lessonId) {
    const answer = document.getElementById(`sentence-select-${lessonId}`).value;
    fetch('/check_lesson', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            lesson_id: lessonId,
            activity_type: 'sentence_complete',
            response: answer,
            complete_lesson: true
        })
    }).then(res => res.json()).then(data => {
        alert(data.is_correct ? 'Perfect! +' + data.points + ' points' : 'Try again!');
    }).catch(err => console.error('Error:', err));
}

function completeLesson(lessonId) {
    fetch('/check_lesson', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            lesson_id: lessonId,
            complete_lesson: true
        })
    }).then(res => res.json()).then(data => {
        alert('Lesson completed! Check your points.');
        // Optionally reload page or update UI
        location.reload();
    }).catch(err => console.error('Error:', err));
}
</script>
{% endblock %}