{% extends "base.html.j2" %}

{% block content %}

<div id="post-form-backdrop" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div id="post-form" class="hidden bg-white p-6 rounded-xl shadow-xl border border-blue-200 max-w-lg w-full mx-4 transform scale-95 transition-all duration-300">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-blue-900">Create a Post</h2>
            <button id="close-post-form" class="text-gray-600 hover:text-gray-800 text-2xl font-bold">&times;</button>
        </div>
        <form action="{{ url_for('create_post') }}" method="POST">
            <textarea name="content" class="w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Share something..." required rows="4"></textarea>
            <select name="subject" class="w-full p-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="math">Math</option>
                <option value="science">Science</option>
                <option value="language">Language</option>
                <option value="General">General</option>
            </select>
            <div class="flex justify-end space-x-3">
                <button type="button" id="cancel-post" class="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition">Cancel</button>
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition">Post</button>
            </div>
        </form>
    </div>
</div>

<button id="open-post-form" class="fixed bottom-6 right-6 bg-blue-500 hover:bg-blue-600 text-white w-14 h-14 rounded-full flex items-center justify-center shadow-lg hover:shadow-xl transition-all duration-200 z-40 text-2xl font-bold">
    +
</button>

{% if posts %}
    {% for post in posts %}
        <div class="bg-black p-5 rounded-xl shadow-lg border border-blue-200 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
            <div class="flex items-center mb-3">
                <div class="w-10 h-10 rounded-full bg-blue-500 text-white flex items-center justify-center mr-3 font-bold text-sm">
                    {{ post.handle[0] | upper if post.handle else 'U' }}
                </div>
                <div>
                    <h3 class="text-sm font-semibold text-blue-100">{{ post.handle }} (Grade {{ post.grade }})</h3>
                    <p class="text-xs text-gray-400">{{ post.created_at }}</p>
                </div>
            </div>
            <p class="text-white leading-relaxed mb-3 text-base">{{ post.content }}</p>
            <div class="flex flex-wrap gap-2 mb-3">
                <span class="bg-blue-900 text-blue-100 text-sm px-3 py-1 rounded-full font-medium">Subject: {{ post.subject }}</span>
                <span class="bg-gray-700 text-gray-200 text-sm px-3 py-1 rounded-full font-medium">Likes: {{ post.likes }}</span>
            </div>
            <form action="{{ url_for('like_post', post_id=post.id) }}" method="POST" class="flex justify-end">
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition disabled:bg-gray-400 disabled:cursor-not-allowed" {% if post.liked_by_user %}disabled{% endif %}>
                    {{ 'Unlike' if post.liked_by_user else 'Like' }}
                </button>
            </form>
        </div>
    {% endfor %}
{% else %}
    <div class="text-center py-8">
        <p class="text-gray-600 text-lg">No posts available yet. Be the first to share!</p>
    </div>
{% endif %}

{% if lesson %}
    <div class="bg-black p-5 rounded-xl shadow-lg border border-orange-300 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
        <h3 class="text-lg font-semibold text-orange-100 mb-3">{{ lesson.subject }}</h3>
        <div class="text-white leading-relaxed mb-4 prose prose-sm max-w-none">{{ lesson.content | safe }}</div>
        {% if lesson.subject == 'language' %}
            <!-- Path Lesson: Word Tracing -->
            <div class="mb-4">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Trace the Word</h4>
                <p class="text-gray-300 mb-2">Type the word you see below to practice spelling:</p>
                <p class="text-white font-bold mb-2">{{ lesson.trace_word or 'cat' }}</p>
                <input type="text" id="trace-input-{{ lesson.id }}" class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white placeholder-gray-400" placeholder="Type the word here">
                <button onclick="checkTrace({{ lesson.id }}, '{{ lesson.trace_word or 'cat' }}')" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
            </div>
            <!-- Spelling Lesson -->
            <div class="mb-4">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Spelling Practice</h4>
                <p class="text-gray-300 mb-2">Spell the word for the given sound: {{ lesson.sound or '/k√¶t/' }}</p>
                <input type="text" id="spell-input-{{ lesson.id }}" class="w-full p-3 border border-gray-600 rounded-lg mb-2 focus:outline-none focus:ring-2 focus:ring-orange-500 bg-gray-800 text-white placeholder-gray-400" placeholder="Type your answer here">
                <button onclick="checkSpelling({{ lesson.id }}, '{{ lesson.spell_word or 'cat' }}')" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
            </div>
            <!-- Multiple Choice Questions -->
            <div class="mb-4">
                <h4 class="text-md font-semibold text-orange-200 mb-2">Multiple Choice</h4>
                <p class="text-gray-300 mb-2">{{ lesson.mc_question or 'What is the correct spelling?' }}</p>
                {% for option in lesson.mc_options or ['cat', 'kat', 'ct', 'caat'] %}
                    <label class="block mb-2 text-white">
                        <input type="radio" name="mc-{{ lesson.id }}" value="{{ option }}" class="mr-2">
                        {{ option }}
                    </label>
                {% endfor %}
                <button onclick="checkMultipleChoice({{ lesson.id }}, '{{ lesson.mc_answer or 'cat' }}')" class="bg-orange-500 text-white px-4 py-2 rounded-md hover:bg-orange-600 transition">Check</button>
            </div>
        {% endif %}
        <div class="flex justify-end">
            <a href="{{ url_for('complete_lesson', lesson_id=lesson.id) }}" class="bg-orange-500 text-white px-6 py-2 rounded-md hover:bg-orange-600 transition inline-flex items-center">
                Complete Lesson
            </a>
        </div>
    </div>
{% else %}
    <div class="text-center py-8">
        <p class="text-gray-600 text-lg">No lessons available. Try generating a new one!</p>
    </div>
{% endif %}

<!-- Game Card -->
<div class="bg-black p-5 rounded-xl shadow-lg border border-green-300 hover:-translate-y-1 hover:shadow-xl transition-all duration-200 max-w-lg mx-auto mb-6">
    <h3 class="text-lg font-semibold text-green-100 mb-3">Play a Game</h3>
    <p class="text-white leading-relaxed mb-4">Test your phonics skills with our interactive game!</p>
    <div class="flex justify-end">
        <a href="{{ url_for('phonics_game') }}" class="bg-green-500 text-white px-6 py-2 rounded-md hover:bg-green-600 transition inline-flex items-center">
            Start Game
        </a>
    </div>
</div>

<div class="mt-8 p-4 bg-gray-50 rounded-xl shadow-sm max-w-lg mx-auto">
    <h2 class="text-xl font-semibold mb-3 text-gray-800">Recent Test</h2>
    {% if test %}
        <p class="text-gray-700 text-lg">Grade {{ test.grade }} - Score: {{ test.score }}/10 - Date: {{ test.date }}</p>
    {% else %}
        <p class="text-gray-600">No tests taken yet. Take one to get started!</p>
    {% endif %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const openButton = document.getElementById('open-post-form');
    const closeButton = document.getElementById('close-post-form');
    const cancelButton = document.getElementById('cancel-post');
    const postForm = document.getElementById('post-form');
    const backdrop = document.getElementById('post-form-backdrop');

    if (!openButton || !postForm || !backdrop) {
        console.error('Required elements not found for post form toggle');
        return;
    }

    openButton.addEventListener('click', function() {
        postForm.classList.remove('hidden');
        backdrop.classList.remove('hidden');
        setTimeout(() => {
            postForm.classList.remove('scale-95');
            postForm.classList.add('scale-100');
        }, 10);
    });

    function closePostForm() {
        postForm.classList.add('scale-95');
        setTimeout(() => {
            postForm.classList.remove('scale-100');
            postForm.classList.add('hidden');
            backdrop.classList.add('hidden');
        }, 200);
    }

    closeButton.addEventListener('click', closePostForm);
    if (cancelButton) {
        cancelButton.addEventListener('click', closePostForm);
    }
    backdrop.addEventListener('click', function(e) {
        if (e.target === backdrop) {
            closePostForm();
        }
    });
});

function checkTrace(lessonId, correctWord) {
    const input = document.getElementById(`trace-input-${lessonId}`).value.trim().toLowerCase();
    if (input === correctWord.toLowerCase()) {
        alert('Correct! Great job tracing the word.');
        saveLessonResponse(lessonId, 'trace', input, true);
    } else {
        alert('Try again! Make sure to type the word exactly as shown.');
        saveLessonResponse(lessonId, 'trace', input, false);
    }
}

function checkSpelling(lessonId, correctWord) {
    const input = document.getElementById(`spell-input-${lessonId}`).value.trim().toLowerCase();
    if (input === correctWord.toLowerCase()) {
        alert('Correct! You spelled the word correctly.');
        saveLessonResponse(lessonId, 'spelling', input, true);
    } else {
        alert('Try again! Check the spelling carefully.');
        saveLessonResponse(lessonId, 'spelling', input, false);
    }
}

function checkMultipleChoice(lessonId, correctAnswer) {
    const selected = document.querySelector(`input[name="mc-${lessonId}"]:checked`);
    if (!selected) {
        alert('Please select an option.');
        return;
    }
    const answer = selected.value.trim().toLowerCase();
    if (answer === correctAnswer.toLowerCase()) {
        alert('Correct! You chose the right answer.');
        saveLessonResponse(lessonId, 'multiple_choice', answer, true);
    } else {
        alert('Incorrect. Try again!');
        saveLessonResponse(lessonId, 'multiple_choice', answer, false);
    }
}

function saveLessonResponse(lessonId, activityType, response, isCorrect) {
    fetch('/save_lesson_response', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            lesson_id: lessonId,
            activity_type: activityType,
            response: response,
            is_correct: isCorrect
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log('Response saved successfully');
        } else {
            console.error('Failed to save response:', data.error);
        }
    })
    .catch(error => console.error('Error saving response:', error));
}
</script>
{% endblock %}