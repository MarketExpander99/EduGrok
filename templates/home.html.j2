<!-- home.html.j2 (updated: Changed Create Post button to a floating action button (FAB) positioned fixed bottom-right for better UX, removed full-width button) -->
{% extends "base.html.j2" %}

{% block title %}Home - EduGrok{% endblock %}

{% block content %}
<div class="max-w-2xl mx-auto">
    <!-- Sorting Options (Dropdown for compactness) -->
    <div class="flex justify-center mb-8">
        <select id="sort-select" onchange="changeSort()" class="bg-grok-surface text-grok-text px-4 py-2 rounded-lg border border-grok-border focus:outline-none focus:ring-2 focus:ring-grok-accent">
            <option value="latest" {% if sort == 'latest' %}selected{% endif %}>Latest</option>
            <option value="most_likes" {% if sort == 'most_likes' %}selected{% endif %}>Most Likes</option>
            <option value="most_views" {% if sort == 'most_views' %}selected{% endif %}>Most Views</option>
        </select>
    </div>

    <!-- Posts Feed -->
    {% if posts %}
        {% for post in posts %}
            <div class="mb-8 {% if highlight_first and loop.first %}animate-pulse border-2 border-grok-accent rounded-lg p-2{% endif %}" id="post-{{ post.id }}">
                {% include 'post_card.html.j2' %}
            </div>
        {% endfor %}
    {% else %}
        <div class="text-center py-12">
            <p class="text-grok-secondary text-lg">No posts yet. Create the first one!</p>
        </div>
    {% endif %}

    <!-- Recent Test -->
    {% include 'recent_test.html.j2' %}

    <!-- Progress Cards -->
    <div class="grid md:grid-cols-2 gap-6 mb-8">
        <div class="card p-6">
            <h3 class="font-semibold text-grok-text mb-3 text-lg">Lessons Completed</h3>
            <p class="text-3xl font-bold text-grok-accent">{{ lessons_completed }}</p>
        </div>
        <div class="card p-6">
            <h3 class="font-semibold text-grok-text mb-3 text-lg">Games Played</h3>
            <p class="text-3xl font-bold text-grok-accent">{{ games_played }}</p>
        </div>
    </div>

    <!-- Badges -->
    {% if badges %}
        <div class="card p-6 mb-8">
            <h3 class="font-semibold text-grok-text mb-4 text-lg">Badges</h3>
            <div class="flex flex-wrap gap-3">
                {% for badge in badges %}
                    <span class="bg-yellow-500 text-white px-4 py-2 rounded-full text-sm font-medium">{{ badge.badge_name }}</span>
                {% endfor %}
            </div>
        </div>
    {% endif %}

    {% include 'post_form.html.j2' %}
</div>

<!-- Floating Action Button (FAB) for Create Post -->
<button onclick="openPostForm()" class="fixed bottom-24 right-4 md:bottom-8 md:right-8 z-50 bg-grok-accent hover:bg-grok-accent-hover text-grok-text w-16 h-16 rounded-full text-2xl font-bold shadow-lg transition-all duration-200 flex items-center justify-center md:w-14 md:h-14 md:text-xl">+</button>

<script>
    // Post interaction functions
    function openPostForm() {
        document.getElementById('post-form').classList.remove('hidden', 'scale-95');
        document.getElementById('post-form-backdrop').classList.remove('hidden');
    }

    function changeSort() {
        const select = document.getElementById('sort-select');
        window.location.href = `?sort=${select.value}`;
    }

    function likePost(postId) {
        fetch(`/like/${postId}`, { method: 'POST' })
            .then(r => r.json())
            .then(d => { if (d.success) location.reload(); else alert(d.error); });
    }

    function repostPost(postId) {
        fetch(`/repost/${postId}`, { method: 'POST' })
            .then(r => r.json())
            .then(d => { if (d.success) location.reload(); else alert(d.error); });
    }

    function toggleComments(postId) {
        const form = document.getElementById(`comment-form-${postId}`);
        form.style.display = form.style.display === 'none' ? 'block' : 'none';
    }

    function sharePost(postId) {
        const url = `${window.location.origin}/home#post-${postId}`;
        navigator.clipboard.writeText(url).then(() => alert('Link copied!'));
    }

    // Close post form
    document.getElementById('cancel-post')?.addEventListener('click', () => {
        document.getElementById('post-form').classList.add('hidden', 'scale-95');
        document.getElementById('post-form-backdrop').classList.add('hidden');
    });

    document.getElementById('post-form-backdrop')?.addEventListener('click', () => {
        document.getElementById('post-form').classList.add('hidden', 'scale-95');
        document.getElementById('post-form-backdrop').classList.add('hidden');
    });

    // Char count for post
    const textarea = document.getElementById('post-content');
    const charCount = document.getElementById('char-count');
    if (textarea && charCount) {
        textarea.addEventListener('input', () => {
            charCount.textContent = `${textarea.value.length}/280`;
        });
    }

    // Media preview
    const fileInput = document.getElementById('media-upload');
    const preview = document.getElementById('media-preview');
    if (fileInput && preview) {
        fileInput.addEventListener('change', (e) => {
            preview.innerHTML = '';
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (ev) => {
                    if (file.type.startsWith('image/')) {
                        preview.innerHTML = `<img src="${ev.target.result}" class="max-w-full h-auto rounded">`;
                    } else if (file.type.startsWith('video/')) {
                        preview.innerHTML = `<video src="${ev.target.result}" controls class="max-w-full h-auto rounded"></video>`;
                    }
                };
                reader.readAsDataURL(file);
            }
        });
    }
</script>
{% endblock %}