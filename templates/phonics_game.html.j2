{% extends "base.html.j2" %}

{% block content %}
<div class="game-container p-4">
    <h2 class="text-2xl font-semibold mb-4">Phonics Memory Match (Grade {{ grade }})</h2>
    <p class="mb-4">Match the words to their sounds in {{ timer_duration }} seconds, Dino Cowboy!</p>
    <div id="timer" class="timer mb-4">Time: {{ timer_duration }}s</div>
    <div id="score" class="text-lg font-semibold mb-4">Score: 0</div>
    <div id="game-board" class="grid grid-cols-4 gap-4">
        {% for word in words %}
            <div class="game-card" data-word="{{ word.word }}" data-sound="{{ word.sound }}">?</div>
            <div class="game-card" data-word="{{ word.word }}" data-sound="{{ word.sound }}">
                {{ word.sound }}{% if language == 'bilingual' %} / {{ word.af }} ({{ word.af_sound }}) {% endif %}
            </div>
        {% endfor %}
    </div>
</div>

<script>
    let timeLeft = {{ timer_duration }};
    const timer = document.getElementById('timer');
    const gameBoard = document.getElementById('game-board');
    const scoreDisplay = document.getElementById('score');
    let score = 0;
    let flippedCards = [];
    let matchedPairs = 0;
    const totalPairs = {{ words | length }};

    // Timer
    const timerInterval = setInterval(() => {
        timeLeft--;
        timer.textContent = `Time: ${timeLeft}s`;
        if (timeLeft <= 0) {
            clearInterval(timerInterval);
            alert(`Time's up! Your score: ${score}`);
            saveScore(score);
        }
    }, 1000);

    // Shuffle cards
    const cards = Array.from(gameBoard.children);
    cards.sort(() => Math.random() - 0.5);
    gameBoard.innerHTML = '';
    cards.forEach(card => gameBoard.appendChild(card));

    // Card flip logic
    cards.forEach(card => {
        card.addEventListener('click', () => {
            if (flippedCards.length < 2 && !card.classList.contains('game-card-flipped') && !card.classList.contains('game-card-matched')) {
                card.classList.add('game-card-flipped');
                card.textContent = card.dataset.sound.includes('/') ? card.dataset.sound : card.dataset.word;
                flippedCards.push(card);
                if (flippedCards.length === 2) {
                    const [card1, card2] = flippedCards;
                    if (card1.dataset.word === card2.dataset.word) {
                        score += 5;
                        matchedPairs++;
                        scoreDisplay.textContent = `Score: ${score}`;
                        flippedCards.forEach(c => c.classList.add('game-card-matched'));
                        flippedCards = [];
                        if (matchedPairs === totalPairs) {
                            clearInterval(timerInterval);
                            alert(`You won, Dino Cowboy! Final score: ${score}`);
                            saveScore(score);
                        }
                    } else {
                        setTimeout(() => {
                            flippedCards.forEach(c => {
                                c.classList.remove('game-card-flipped');
                                c.textContent = '?';
                            });
                            flippedCards = [];
                        }, 1000);
                    }
                }
            }
        });
    });

    // Save score
    async function saveScore(score) {
        await fetch('/phonics_game', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ score: score })
        });
        window.location.href = '/home';
    }
</script>
{% endblock %}