<!-- Filename: profile.html.j2 -->
<!-- Updates: Added profile picture upload form in User Info card with file input, preview functionality via JS, and submit to new update_profile_picture endpoint. Enhanced avatar display to use img tag with current profile_picture URL (fallback to letter avatar). Ensured Tailwind/grok-theme consistency, responsive design, and smooth transitions. Preserved all previous updates including sticky header. -->

{% extends "base.html.j2" %}

{% block title %}Profile - EduGrok{% endblock %}

{% block content %}
<!-- Sticky Floating Header (exact match to lessons/games structure) -->
<div class="bg-grok-bg border-b border-grok-border sticky top-0 z-50 transition-transform duration-300 ease-in-out w-full left-0" id="sticky-header">
    <div class="p-4 flex justify-between items-center">
        <h1 class="text-xl font-bold text-grok-text">Your Profile, {{ user.handle | default('Dino Cowboy') }}!</h1>
        <div></div> <!-- Empty div for justify-between alignment -->
    </div>
</div>

<!-- Content Container (matches pt-4 for header offset, retains max-w-lg for profile layout) -->
<div class="max-w-lg mx-auto p-6 pt-4">
    {% if error %}
        <div class="text-center py-4">
            <p class="text-red-400 text-lg">{{ error }}</p>
            <a href="{{ url_for('login') }}" class="bg-grok-accent text-grok-text px-4 py-2 rounded-md hover:bg-grok-accent-hover transition inline-flex items-center shadow-md mt-4">Log In Again</a>
        </div>
    {% elif user %}
        <div class="card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border hover:-translate-y-1 hover:shadow-xl transition-all duration-200 mb-6">
            <h3 class="text-lg font-semibold text-grok-text mb-4">User Info</h3>
            <div class="flex items-center mb-4">
                <div class="relative">
                    {% if user.profile_picture %}
                        <img id="profile-avatar" src="{{ user.profile_picture }}" alt="Profile Picture" class="w-12 h-12 rounded-full object-cover shadow-md">
                    {% else %}
                        <div id="profile-avatar" class="w-12 h-12 rounded-full bg-grok-accent text-grok-text flex items-center justify-center font-bold text-lg shadow-md">
                            {{ user.handle[0] | upper if user.handle else 'U' }}
                        </div>
                    {% endif %}
                </div>
                <div class="ml-4 flex-1">
                    <p class="text-grok-text text-base"><strong>Handle:</strong> {{ user.handle | default('User') }}</p>
                    <p class="text-grok-text text-base"><strong>Email:</strong> {{ session.email | default('Unknown') }}</p>
                    <p class="text-grok-text text-base"><strong>Grade:</strong> {{ grade | default('1') }}</p>
                    <p class="text-grok-text text-base"><strong>Star Coins:</strong> {{ star_coins | default(0) }}</p>
                    <p class="text-grok-text text-base"><strong>Points:</strong> {{ points | default(0) }}</p>
                    <p class="text-grok-text text-base"><strong>Role:</strong> {{ user.role | default('parent') | title }}</p>
                </div>
            </div>

            <!-- Profile Picture Upload Form -->
            <form action="{{ url_for('update_profile_picture') }}" method="POST" enctype="multipart/form-data" id="profile-pic-form" class="space-y-3">
                <label for="profile_picture" class="block text-grok-secondary font-medium">Update Profile Picture</label>
                <input type="file" name="profile_picture" id="profile_picture" accept="image/*" class="w-full p-3 border border-grok-border rounded-lg focus:outline-none focus:ring-2 focus:ring-grok-accent bg-transparent text-grok-text file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-grok-accent file:text-grok-text hover:file:bg-grok-accent-hover">
                <div id="preview-container" class="hidden">
                    <p class="text-grok-secondary text-sm mb-2">Preview:</p>
                    <img id="preview-img" src="" alt="Preview" class="w-24 h-24 rounded-full object-cover border border-grok-border mx-auto">
                </div>
                <button type="submit" class="bg-grok-accent text-grok-text px-6 py-2 rounded-md hover:bg-grok-accent-hover transition shadow-md w-full">Upload Picture</button>
            </form>
        </div>

        <div class="card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border hover:-translate-y-1 hover:shadow-xl transition-all duration-200 mb-6">
            <h3 class="text-lg font-semibold text-grok-text mb-4">Progress</h3>
            <p class="text-grok-text text-base mb-2"><strong>Lessons Completed:</strong> {{ lessons_completed | default(0) }}</p>
            <p class="text-grok-text text-base mb-2"><strong>Games Played:</strong> {{ games_played | default(0) }}</p>
            <p class="text-grok-text text-base"><strong>Average Test Score:</strong> {{ avg_score | default('N/A') }}</p>
        </div>

        {% if user.role == 'parent' %}
        <div class="card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border hover:-translate-y-1 hover:shadow-xl transition-all duration-200 mb-6">
            <h3 class="text-lg font-semibold text-grok-text mb-4">Linked Children ({{ kids | length }})</h3>
            {% if kids %}
                <div class="space-y-2 mb-4">
                    {% for kid in kids %}
                        <div class="flex justify-between items-center p-3 bg-grok-bg rounded-lg">
                            <div>
                                <p class="text-grok-text font-medium">{{ kid.handle }} (Grade {{ kid.grade }})</p>
                                <p class="text-grok-secondary text-sm">ID: {{ kid.id }}</p>
                            </div>
                            <a href="{{ url_for('parent_dashboard', kid_id=kid.id) }}" class="bg-grok-accent text-grok-text px-3 py-1 rounded-md text-sm hover:bg-grok-accent-hover transition">View Dashboard</a>
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <p class="text-grok-secondary text-base">No children linked yet.</p>
            {% endif %}
            <a href="{{ url_for('register_child') }}" class="bg-grok-accent text-grok-text px-4 py-2 rounded-md hover:bg-grok-accent-hover transition shadow-md inline-flex items-center">
                <i class="fas fa-plus mr-2"></i>Add Child
            </a>
        </div>
        {% endif %}

        <div class="card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border hover:-translate-y-1 hover:shadow-xl transition-all duration-200 mb-6">
            <h3 class="text-lg font-semibold text-grok-text mb-4">Badges</h3>
            {% if badges %}
                <div class="flex flex-wrap gap-2">
                    {% for badge in badges %}
                        <span class="bg-yellow-900/50 text-yellow-100 px-3 py-1 rounded-full text-sm font-medium shadow-sm">{{ badge.badge_name }} ({{ badge.awarded_date }})</span>
                    {% endfor %}
                </div>
            {% else %}
                <p class="text-grok-secondary text-base">No badges yet. Keep learning to earn some!</p>
            {% endif %}
        </div>

        <div class="card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border hover:-translate-y-1 hover:shadow-xl transition-all duration-200 mb-6">
            <h3 class="text-lg font-semibold text-grok-text mb-4">Feedback History</h3>
            {% if feedbacks %}
                {% for feedback in feedbacks %}
                    <p class="text-grok-text text-base mb-2"><strong>Rating:</strong> {{ feedback.rating | default('N/A') }} - <strong>Comments:</strong> {{ feedback.comments | default('None') }} - <strong>Date:</strong> {{ feedback.submitted_date | default('Unknown') }}</p>
                {% endfor %}
            {% else %}
                <p class="text-grok-secondary text-base">No feedback submitted yet. <a href="{{ url_for('feedback') }}" class="bg-grok-accent text-grok-text px-4 py-2 rounded-md hover:bg-grok-accent-hover transition inline-flex items-center shadow-md">Submit Feedback</a></p>
            {% endif %}
        </div>

        <div class="card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border hover:-translate-y-1 hover:shadow-xl transition-all duration-200 mb-6">
            <h3 class="text-lg font-semibold text-grok-text mb-4">Settings</h3>
            <form action="{{ url_for('set_theme') }}" method="POST" class="mb-4">
                <label for="theme" class="block text-grok-secondary font-medium mb-2">Theme:</label>
                <select name="theme" id="theme" class="w-full p-3 border border-grok-border rounded-lg focus:outline-none focus:ring-2 focus:ring-grok-accent mb-3 bg-transparent text-grok-text">
                    <option value="astronaut" {% if theme == 'astronaut' %}selected{% endif %}>Astronaut</option>
                    <option value="farm" {% if theme == 'farm' %}selected{% endif %}>Farm</option>
                    <option value="space" {% if theme == 'space' %}selected{% endif %}>Space</option>
                </select>
                <button type="submit" class="bg-grok-accent text-grok-text px-4 py-2 rounded-md hover:bg-grok-accent-hover transition shadow-md">Update Theme</button>
            </form>
            <form action="{{ url_for('set_language') }}" method="POST">
                <label for="language" class="block text-grok-secondary font-medium mb-2">Language:</label>
                <select name="language" id="language" class="w-full p-3 border border-grok-border rounded-lg focus:outline-none focus:ring-2 focus:ring-grok-accent mb-3 bg-transparent text-grok-text">
                    <option value="en" {% if language == 'en' %}selected{% endif %}>English</option>
                    <option value="bilingual" {% if language == 'bilingual' %}selected{% endif %}>Bilingual (English/Afrikaans)</option>
                </select>
                <button type="submit" class="bg-grok-accent text-grok-text px-4 py-2 rounded-md hover:bg-grok-accent-hover transition shadow-md">Update Language</button>
            </form>
        </div>
    {% else %}
        <div class="text-center py-8">
            <p class="text-red-400 text-lg">Unable to load user information. Please log in again.</p>
            <a href="{{ url_for('login') }}" class="bg-grok-accent text-grok-text px-4 py-2 rounded-md hover:bg-grok-accent-hover transition inline-flex items-center shadow-md mt-4">Log In</a>
        </div>
    {% endif %}
</div>

<!-- Sticky header scroll hide/show logic (exact match to lessons.html.j2) -->
<script>
let headerLastScrollTop = 0;
let headerTicking = false;
const headerScrollThreshold = 10;

function updateHeaderPosition() {
    let st = window.pageYOffset || document.documentElement.scrollTop;
    const delta = st - headerLastScrollTop;
    const isScrollingDown = delta > headerScrollThreshold;
    const isScrollingUp = delta < -headerScrollThreshold;

    const header = document.getElementById('sticky-header');
    if (header) {
        if (isScrollingDown) {
            header.style.transform = 'translateY(-100%)';
        } else if (isScrollingUp) {
            header.style.transform = 'translateY(0)';
        }
    }

    headerLastScrollTop = st <= 0 ? 0 : st;
    headerTicking = false;
}

window.addEventListener('scroll', () => {
    if (!headerTicking) {
        requestAnimationFrame(updateHeaderPosition);
        headerTicking = true;
    }
});

// Initial setup
document.addEventListener('DOMContentLoaded', function() {
    const header = document.getElementById('sticky-header');
    if (header) {
        header.style.transform = 'translateY(0)';
    }
    setTimeout(() => {
        headerLastScrollTop = window.pageYOffset || document.documentElement.scrollTop;
    }, 100);
    updateHeaderPosition();

    // Profile picture preview
    const fileInput = document.getElementById('profile_picture');
    const previewContainer = document.getElementById('preview-container');
    const previewImg = document.getElementById('preview-img');

    fileInput.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file && file.type.startsWith('image/')) {
            const reader = new FileReader();
            reader.onload = function(e) {
                previewImg.src = e.target.result;
                previewContainer.classList.remove('hidden');
            };
            reader.readAsDataURL(file);
        } else {
            previewContainer.classList.add('hidden');
        }
    });
});
</script>
{% endblock %}