<!-- Filename: lessons.html.j2 -->
<!-- Updates: Updated headings, buttons, and cards with grok- classes for theme consistency. Added shadows, transitions, and better grid layout for responsiveness. Improved no-lessons section styling. -->

{% extends "base.html.j2" %}

{% block title %}Lessons - EduGrok{% endblock %}

{% block content %}
<div class="max-w-4xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-6 text-center text-grok-text">Lessons (Grade {{ grade }}) ðŸ“š</h1>
    
    <div class="text-center mb-8">
        <button onclick="generateLesson()" class="bg-grok-accent hover:bg-grok-accent-hover text-grok-text px-6 py-3 rounded-lg font-semibold transition shadow-md">Generate New Lesson</button>
    </div>

    {% if lessons %}
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
            {% for lesson in lessons %}
                <div class="card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border hover:-translate-y-1 hover:shadow-xl transition-all duration-200">
                    <h2 class="text-xl font-bold text-grok-text mb-2">{{ lesson.title or 'Lesson ' ~ lesson.id }}</h2>
                    <p class="text-grok-secondary mb-4">{{ lesson.description or 'No description' }}</p>
                    {% if not lesson.added %}
                        <button onclick="addToFeed({{ lesson.id }})" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md font-semibold transition shadow-md">Add to Feed</button>
                    {% else %}
                        <p class="text-yellow-400 mb-4 font-medium">Added to Feed</p>
                        {% if lesson.completed %}
                            <a href="{{ url_for('reset_lesson', lesson_id=lesson.id) }}" class="bg-grok-secondary hover:bg-grok-accent-hover text-grok-text px-4 py-2 rounded-md font-semibold transition shadow-md">Reset</a>
                        {% else %}
                            <p class="text-grok-secondary text-sm">Available in your feed</p>
                        {% endif %}
                    {% endif %}
                </div>
            {% endfor %}
        </div>
    {% else %}
        <div class="text-center py-8 card bg-grok-surface p-5 rounded-xl shadow-lg border border-grok-border max-w-lg mx-auto">
            <h2 class="text-2xl font-bold mb-4 text-grok-text">No Lessons Yet</h2>
            <p class="text-grok-secondary mb-6">Generate some lessons to get started!</p>
        </div>
    {% endif %}
</div>

<script>
    async function handleFetch(fetchPromise, successMsg, errorMsg) {
        try {
            const response = await fetchPromise;
            if (!response.ok) {
                const errorText = await response.text();
                console.error('Fetch error:', errorText);
                alert(errorMsg || 'Request failed: ' + response.status);
                return;
            }
            const data = await response.json();
            if (data.success) {
                if (successMsg) alert(successMsg);
                location.reload();
            } else {
                alert(data.error || errorMsg || 'Operation failed');
            }
        } catch (error) {
            console.error('Fetch error:', error);
            alert('Network error or invalid response. Please try again.');
        }
    }

    function addToFeed(lessonId) {
        handleFetch(
            fetch('/add_to_feed', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({lesson_id: lessonId})
            }),
            'Lesson added to feed!',
            'Failed to add lesson'
        );
    }

    function generateLesson() {
        handleFetch(
            fetch('/generate_lesson', {method: 'POST'}),
            'Lesson generated!',
            'Failed to generate lesson'
        );
    }
</script>
{% endblock %}